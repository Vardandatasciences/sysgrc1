name: CI-CD-Test-Suite

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  run-backend-tests:
    name: Run Backend Test Suite
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_db
        ports:
          - 3306:3306
        options: >
          --health-cmd="mysqladmin ping --silent" \
          --health-interval=10s \
          --health-timeout=5s \
          --health-retries=3

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run unit and functional tests
        run: |
          pytest tests/backend

  run-functional-tests:
    name: Run Functional Test Suite
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Run functional tests
        run: |
          pytest tests/functional

  run-security-scans:
    name: Security Scanning
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Bandit
        run: |
          pip install bandit

      - name: Run Bandit scan
        run: |
          bandit -r . > bandit-report.txt

      - name: Upload Bandit report
        uses: actions/upload-artifact@v3
        with:
          name: bandit-report
          path: bandit-report.txt

      - name: Run Semgrep scan
        uses: returntocorp/semgrep-action@v1
        with:
          config: "auto"

  enforce-ci-failure:
    name: Enforce CI failure on test error
    needs: [run-backend-tests, run-functional-tests, run-security-scans]
    runs-on: ubuntu-latest
    steps:
      - name: Fail pipeline if dependencies failed
        run: echo "All required jobs must pass"
